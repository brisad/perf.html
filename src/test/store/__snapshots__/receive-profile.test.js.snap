// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`actions/receive-profile _fetchProfile fails if a bad profile JSON is passed in 1`] = `[Error: The profile’s JSON could not be decoded. The full error information has been printed out to the DevTool’s console.]`;

exports[`actions/receive-profile _fetchProfile fails if a bad profile JSON is passed in 2`] = `
Array [
  Array [
    "The profile’s JSON could not be decoded.",
  ],
  Array [
    "JSON parsing error:",
    [Error: Invalid JSON],
  ],
  Array [
    "Fetch response:",
    Object {
      "arrayBuffer": undefined,
      "headers": Object {
        "get": [Function],
      },
      "json": [Function],
      "ok": true,
      "status": 200,
    },
  ],
]
`;

exports[`actions/receive-profile _fetchProfile fails if a bad profile JSON is passed in, with no content type 1`] = `[Error: The profile’s JSON could not be decoded. The full error information has been printed out to the DevTool’s console.]`;

exports[`actions/receive-profile _fetchProfile fails if a bad profile JSON is passed in, with no content type 2`] = `
Array [
  Array [
    "The profile’s JSON could not be decoded.",
  ],
  Array [
    "JSON parsing error:",
    [Error: Invalid JSON],
  ],
  Array [
    "Fetch response:",
    Object {
      "arrayBuffer": undefined,
      "headers": Object {
        "get": [Function],
      },
      "json": [Function],
      "ok": true,
      "status": 200,
    },
  ],
]
`;

exports[`actions/receive-profile _fetchProfile fails if a bad zip file is passed in 1`] = `[Error: Unable to unzip the zip file. The full error information has been printed out to the DevTool’s console.]`;

exports[`actions/receive-profile _fetchProfile fails if a bad zip file is passed in 2`] = `
Array [
  Array [
    "Unable to unzip the zip file.",
  ],
  Array [
    "Error:",
    [Error: Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html],
  ],
  Array [
    "Fetch response:",
    Object {
      "arrayBuffer": [Function],
      "headers": Object {
        "get": [Function],
      },
      "json": undefined,
      "ok": true,
      "status": 200,
    },
  ],
]
`;

exports[`actions/receive-profile _fetchProfile fails if a completely unknown file is passed in 1`] = `[Error: The profile could not be decoded. This does not look like a supported file type. The full error information has been printed out to the DevTool’s console.]`;

exports[`actions/receive-profile _fetchProfile fails if a completely unknown file is passed in 2`] = `
Array [
  Array [
    "The profile could not be decoded. This does not look like a supported file type.",
  ],
  Array [
    "JSON parsing error:",
    [Error: Invalid JSON],
  ],
  Array [
    "Fetch response:",
    Object {
      "arrayBuffer": undefined,
      "headers": Object {
        "get": [Function],
      },
      "json": [Function],
      "ok": true,
      "status": 200,
    },
  ],
]
`;

exports[`actions/receive-profile retrieveProfileFromFile will be an error to view a profile with no threads 1`] = `"No threads were captured in this profile, there is nothing to display."`;

exports[`actions/receive-profile retrieveProfileFromFile will give an error when unable to decompress a zipped profile 1`] = `[Error: Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html]`;

exports[`actions/receive-profile retrieveProfileFromFile will give an error when unable to parse json 1`] = `[Error: Unserializing the profile failed: TypeError: Cannot read property 'version' of undefined]`;

exports[`actions/receive-profile retrieveProfilesToCompare filters samples, but not markers, according to the URL 1`] = `
Object {
  "length": 3,
  "responsiveness": Array [
    0,
    0,
    0,
  ],
  "stack": Array [
    2,
    3,
    4,
  ],
  "time": Array [
    0,
    1,
    2,
  ],
}
`;

exports[`actions/receive-profile retrieveProfilesToCompare filters samples, but not markers, according to the URL 2`] = `
Object {
  "data": Array [
    Object {
      "endTime": 1,
      "startTime": -1,
      "type": "DummyForTests",
    },
    null,
    null,
    null,
    null,
  ],
  "length": 5,
  "name": Array [
    0,
    1,
    2,
    3,
    4,
  ],
  "time": Array [
    -1,
    0,
    1,
    2,
    3,
  ],
}
`;
